// Debugging
ExileClient_gui_interactionMenu_hook = "exileClient\ExileClient_gui_interactionMenu_hook.sqf";

// Support for Base Spawns
ExileClient_gui_selectSpawnLocation_show = "exileClient\baserespawn.sqf";

// Support for level 7 traders
ExileClient_gui_traderDialog_show = "exileClient\ExileClient_gui_traderDialog_show.sqf";

// Debugging of network message
ExileClient_system_network_dispatchIncomingMessage = "exileClient\ExileClient_system_network_dispatchIncomingMessage.sqf";

// Modified safezone detection with altitude.
ExileClient_util_world_isInTraderZone = "ExileClient\ExileClient_util_world_isInTraderZone.sqf";

// [GRG] Custom Player Icons
ExileClient_gui_hud_renderPartyESP = "ExileClient\ExileClient_gui_hud_renderPartyESP.sqf";
//[GRG] Deploybike
ExileClient_gui_inventory_event_onSlotDoubleClick = "Custom\deployableVehicles\functions\ExileClient_gui_inventory_event_onSlotDoubleClick.sqf"; 	
//Enigma Revive
ExileClient_object_player_death_startBleedingOut = "custom\EnigmaRevive\ExileClient_object_player_death_startBleedingOut.sqf"; //Happys Revive
	
// for vector build
ExileClient_object_construction_move = "eXpochVectorBldg\ExileClient_object_construction_move.sqf";
ExileClient_gui_hud_event_onKeyDown = "eXpochVectorBldg\ExileClient_gui_hud_event_onKeyDown.sqf";
ExileClient_gui_hud_event_onKeyUp = "eXpochVectorBldg\ExileClient_gui_hud_event_onKeyUp.sqf";
ExileClient_construction_beginExistingObject = "eXpochVectorBldg\ExileClient_construction_beginExistingObject.sqf";
ExileClient_construction_beginNewObject = "eXpochVectorBldg\ExileClient_construction_beginNewObject.sqf";
ExileClient_construction_thread = "eXpochVectorBldg\ExileClient_construction_thread.sqf";
ExileClient_gui_constructionMode_update = "eXpochVectorBldg\ExileClient_gui_constructionMode_update.sqf";
ExileClient_util_world_canBuildHere = "eXpochVectorBldg\ExileClient_util_world_canBuildHere.sqf";

// Remove any remaining player records (dead player records only which sometimes duplicate) from db upon login when dead.
// And add support for tracking time remaining for level7 trading
 ExileClient_object_player_network_loadPlayerResponse = "exileClient\ExileClient_object_player_network_loadPlayerResponse.sqf";
ExileServer_object_player_database_load = "GRG_Exile_Server_Overrides\ExileServer_object_player_database_load.sqf";
ExileServer_object_player_database_update = "GRG_Exile_Server_Overrides\ExileServer_object_player_database_update.sqf";

//  GRG Vehicle Nicknames and store/save ammo
ExileServer_object_vehicle_database_insert = "GRG_Exile_Server_Overrides\ExileServer_object_vehicle_database_insert.sqf";
ExileServer_object_vehicle_database_update = "GRG_Exile_Server_Overrides\ExileServer_object_vehicle_database_update.sqf";	

// Spawn Vehicles at Precise Locations
ExileServer_system_trading_network_purchaseVehicleRequest = "GRG_Exile_Server_Overrides\ExileServer_system_trading_network_purchaseVehicleRequest.sqf"; // Merged

// Logging of Destroyed Vehicles
ExileServer_object_vehicle_event_onMPKilled = "GRG_Exile_Server_Overrides\ExileServer_object_vehicle_event_onMPKilled.sqf"; // Merged

//Player Deaths Logging
ExileServer_object_player_event_onMpKilled = "GRG_Exile_Server_Overrides\ExileServer_object_player_event_onMpKilled.sqf";  //  Merged

// Sell crates at waste dump trader
ExileServer_system_trading_network_wasteDumpRequest = "GRG_Exile_Server_Overrides\ExileServer_system_trading_network_wasteDumpRequest.sqf";
ExileClient_gui_wasteDumpDialog_show = "exileClient\ExileClient_gui_wasteDumpDialog_show.sqf";
ExileClient_gui_wasteDumpDialog_event_onModeDropDownSelectionChanged = "exileClient\ExileClient_gui_wasteDumpDialog_event_onModeDropDownSelectionChanged.sqf";	

// Safely flip Vehicles
ExileClient_object_vehicle_flip  = "exileClient\ExileClient_object_vehicle_flip.sqf";  //  ExileClient_object_vehicle_flip
ExileClient_object_vehicle_network_flipVehicleRequest  = "exileClient\ExileClient_object_vehicle_network_flipVehicleRequest.sqf";  //  ExileClient_object_vehicle_network_flipVehicleRequest
ExileServer_object_vehicle_network_flipVehRequest = "GRG_Exile_Server_Overrides\ExileServer_object_vehicle_network_flipVehRequest.sqf";

// Dual Armas Client
ExileClient_object_player_event_onInventoryClosed = "custom\dual_arms\ExileClient_object_player_event_onInventoryClosed.sqf";
ExileClient_object_player_event_onInventoryOpened = "custom\dual_arms\ExileClient_object_player_event_onInventoryOpened.sqf";
ExileClient_object_player_event_onKilled = "custom\dual_arms\ExileClient_object_player_event_onKilled.sqf";
ExileClient_object_player_event_onTake = "custom\dual_arms\ExileClient_object_player_event_onTake.sqf";
//ExileClient_gui_hud_event_onKeyUp = "custom\dual_arms\ExileClient_gui_hud_event_onKeyUp.sqf";  Diffmerged with the one for Vector Building.
ExileClient_gui_traderDialog_updateInventoryListBox = "custom\dual_arms\ExileClient_gui_traderDialog_updateInventoryListBox.sqf";

//Dual Arms Server
ExileServer_system_network_event_onHandleDisconnect = "custom\dual_arms\ExileServer_system_network_event_onHandleDisconnect.sqf";	

// Man Drones
ExileServer_object_vehicle_database_load = "GRG_Exile_Server_Overrides\ExileServer_object_vehicle_database_load.sqf";
ExileServer_object_vehicle_carefulCreateVehicle = "GRG_Exile_Server_Overrides\ExileServer_object_vehicle_carefulCreateVehicle.sqf";
	
//  Support paintshop for constructed objects.
ExileServer_object_construction_database_load = "GRG_Exile_Server_Overrides\ExileServer_object_construction_database_load.sqf";

// Support for Vehicle claim scripts
ExileServer_system_garbageCollector_deleteObject = "GRG_Exile_Server_Overrides\ExileServer_system_garbageCollector_deleteObject.sqf";

// Support for Reporting DLC Name 
ExileClient_gui_traderDialog_updateStoreListBox = "exileClient\ExileClient_gui_traderDialog_updateStoreListBox.sqf";
ExileClient_gui_vehicleTraderDialog_updateVehicleListBox = "exileClient\ExileClient_gui_vehicleTraderDialog_updateVehicleListBox.sqf";
// for 64 bit server support
ExileServer_world_initialize = "Exile_Server_Overrides\ExileServer_world_initialize.sqf";
ExileServer_util_time_uptime = "Exile_Server_Overrides\ExileServer_util_time_uptime.sqf";
ExileServer_util_time_addTime = "Exile_Server_Overrides\ExileServer_util_time_addTime.sqf";
ExileServer_util_time_currentTime = "Exile_Server_Overrides\ExileServer_util_time_currentTime.sqf";
ExileServer_system_database_connect = "Exile_Server_Overrides\ExileServer_system_database_connect.sqf";
ExileServer_system_database_handleBig = "Exile_Server_Overrides\ExileServer_system_database_handleBig.sqf";
ExileServer_system_process_noobFilter = "Exile_Server_Overrides\ExileServer_system_process_noobFilter.sqf";
ExileServer_object_player_createBambi = "Exile_Server_Overrides\ExileServer_object_player_createBambi.sqf";
//ExileServer_object_player_database_load = "Exile_Server_Overrides\ExileServer_object_player_database_load.sqf";
//ExileServer_object_vehicle_database_load = "Exile_Server_Overrides\ExileServer_object_vehicle_database_load.sqf";
//ExileServer_object_player_event_onMpKilled = "Exile_Server_Overrides\ExileServer_object_player_event_onMpKilled.sqf";
ExileServer_object_container_database_load = "Exile_Server_Overrides\ExileServer_object_container_database_load.sqf";
ExileServer_object_container_database_insert = "Exile_Server_Overrides\ExileServer_object_container_database_insert.sqf";
ExileServer_system_territory_database_insert = "Exile_Server_Overrides\ExileServer_system_territory_database_insert.sqf";
ExileServer_object_container_database_update = "Exile_Server_Overrides\ExileServer_object_container_database_update.sqf";
ExileServer_object_container_createContainer = "Exile_Server_Overrides\ExileServer_object_container_createContainer.sqf";
ExileServer_system_database_query_selectFull = "Exile_Server_Overrides\ExileServer_system_database_query_selectFull.sqf";
//ExileServer_object_construction_database_load = "Exile_Server_Overrides\ExileServer_object_construction_database_load.sqf";
ExileServer_system_database_query_insertSingle = "Exile_Server_Overrides\ExileServer_system_database_query_insertSingle.sqf";
ExileServer_system_database_query_selectSingle = "Exile_Server_Overrides\ExileServer_system_database_query_selectSingle.sqf";
ExileServer_object_construction_database_insert = "Exile_Server_Overrides\ExileServer_object_construction_database_insert.sqf";
ExileServer_system_simulationMonitor_initialize = "Exile_Server_Overrides\ExileServer_system_simulationMonitor_initialize.sqf";
ExileServer_system_database_query_fireAndForget = "Exile_Server_Overrides\ExileServer_system_database_query_fireAndForget.sqf";
ExileServer_object_vehicle_createPersistentVehicle = "Exile_Server_Overrides\ExileServer_object_vehicle_createPersistentVehicle.sqf";
ExileServer_system_trading_network_sellItemRequest = "Exile_Server_Overrides\ExileServer_system_trading_network_sellItemRequest.sqf";
ExileServer_system_database_query_selectSingleField = "Exile_Server_Overrides\ExileServer_system_database_query_selectSingleField.sqf";
//ExileServer_system_trading_network_wasteDumpRequest = "Exile_Server_Overrides\ExileServer_system_trading_network_wasteDumpRequest.sqf";
ExileServer_object_vehicle_createNonPersistentVehicle = "Exile_Server_Overrides\ExileServer_object_vehicle_createNonPersistentVehicle.sqf";
ExileServer_system_territory_network_purchaseTerritory = "Exile_Server_Overrides\ExileServer_system_territory_network_purchaseTerritory.sqf";
ExileServer_system_territory_network_flagStolenRequest = "Exile_Server_Overrides\ExileServer_system_territory_network_flagStolenRequest.sqf";
ExileServer_system_trading_network_purchaseItemRequest = "Exile_Server_Overrides\ExileServer_system_trading_network_purchaseItemRequest.sqf";
ExileServer_system_territory_network_restoreFlagRequest = "Exile_Server_Overrides\ExileServer_system_territory_network_restoreFlagRequest.sqf";
//ExileServer_system_trading_network_purchaseVehicleRequest = "Exile_Server_Overrides\ExileServer_system_trading_network_purchaseVehicleRequest.sqf";
ExileServer_system_territory_network_payFlagRansomRequest = "Exile_Server_Overrides\ExileServer_system_territory_network_payFlagRansomRequest.sqf";
ExileServer_object_vehicle_network_retrieveVehicleRequest = "Exile_Server_Overrides\ExileServer_object_vehicle_network_retrieveVehicleRequest.sqf";
ExileServer_system_territory_maintenance_recalculateDueDate = "Exile_Server_Overrides\ExileServer_system_territory_maintenance_recalculateDueDate.sqf";
ExileServer_system_territory_network_territoryUpgradeRequest = "Exile_Server_Overrides\ExileServer_system_territory_network_territoryUpgradeRequest.sqf";
ExileServer_system_trading_network_purchaseVehicleSkinRequest = "Exile_Server_Overrides\ExileServer_system_trading_network_purchaseVehicleSkinRequest.sqf";
ExileServer_system_territory_network_payTerritoryProtectionMoneyRequest = "Exile_Server_Overrides\ExileServer_system_territory_network_payTerritoryProtectionMoneyRequest.sqf";

// control deletion of blckeagls related objects
//ExileServer_system_garbageCollector_deleteObject = "GRG_Exile_Server_Overrides\ExileServer_system_garbageCollector_deleteObject.sqf";
ExileServer_system_garbageCollector_unscheduled_deleteAllDead = "GRG_Exile_Server_Overrides\ExileServer_system_garbageCollector_unscheduled_deleteAllDead.sqf";
ExileServer_system_garbageCollector_unscheduled_deleteWeaponHolderSimulated = "GRG_Exile_Server_Overrides\ExileServer_system_garbageCollector_unscheduled_deleteWeaponHolderSimulated.sqf";
ExileServer_system_garbageCollector_unscheduled_deleteGroundWeaponHolders = "GRG_Exile_Server_Overrides\ExileServer_system_garbageCollector_unscheduled_deleteGroundWeaponHolders.sqf";
ExileServer_system_garbageCollector_unscheduled_deleteGroups = "GRG_Exile_Server_Overrides\ExileServer_system_garbageCollector_unscheduled_deleteGroups.sqf";
